name: Node.js CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: build-and-test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    env:
      PORT: ${{ secrets.PORT }}
      NODE_ENV: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && 'production' || 'development' }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_TYPE: ${{ secrets.DB_TYPE }}
      REFRESH_TOKEN_SECRET_KEY: ${{ secrets.REFRESH_TOKEN_SECRET_KEY }}
      CORS_ORIGIN: ${{ secrets.CORS_ORIGIN }}
      JWKS_URI: ${{ secrets.JWKS_URI }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      ACCESS_TOKEN_EXPIRE: ${{ secrets.ACCESS_TOKEN_EXPIRE }}
      REFRESH_TOKEN_EXPIRE: ${{ secrets.REFRESH_TOKEN_EXPIRE }}

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build

    - name: Run tests with coverage
      run: npm run test:coverage

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage
        path: coverage

  sonarcloud:
    name: SonarCloud Analysis
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Download coverage reports
        uses: actions/download-artifact@v4
        with:
          name: coverage
          path: coverage

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy:
    needs: [build, sonarcloud]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist
    - name: Run migrations
      run: npm run migration:run
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
    - name: Deploy to production
      run: |
        echo "Add your deployment commands here"
        # For example:
        # - ssh into your server
        # - update the application
        # - restart the service
      env:
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}